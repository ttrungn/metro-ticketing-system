<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <RootNamespace>SampleService.Web</RootNamespace>
        <AssemblyName>SampleService.Web</AssemblyName>
        <ContainerRepository>SamepleService</ContainerRepository>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference Include="..\Application\Application.csproj"/>
        <ProjectReference Include="..\Infrastructure\Infrastructure.csproj"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore"/>
        <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore"/>
        <PackageReference Include="Microsoft.AspNetCore.OpenApi"/>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore"/>
        <PackageReference Include="NSwag.AspNetCore"/>
        <PackageReference Include="NSwag.MSBuild">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="FluentValidation.AspNetCore"/>
    </ItemGroup>

    <ItemGroup>
      <Content Include="..\..\..\.dockerignore">
        <Link>.dockerignore</Link>
      </Content>
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="wwwroot\api\sample\specification.json" />
    </ItemGroup>


    <!-- Auto-generated Open API specification and Angular TypeScript clients -->
    <PropertyGroup>
        <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
    </PropertyGroup>

   
</Project>
