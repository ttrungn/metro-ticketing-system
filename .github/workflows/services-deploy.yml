name: Deploy Services to VPS

on:
  workflow_run:
    workflows:
      - "CI – Build & Push UserService Docker Image"
      - "CI – Build & Push SampleService Docker Image"
      - "CI – Build & Push CatalogService Docker Image"
      - "CI – Build & Push NotificationService Docker Image"
      - "CI – Build & Push OrderService Docker Image"
      - "CI – Build & Push Yarp Api Gateway Docker Image"
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Choose service to deploy
        id: choose-service
        run: |
          TRIGGERED="${{ github.event.workflow_run.name }}"

          if [[ "$TRIGGERED" == "CI – Build & Push UserService Docker Image" ]]; then
            echo "service=user-service" >> $GITHUB_OUTPUT
          elif [[ "$TRIGGERED" == "CI – Build & Push SampleService Docker Image" ]]; then
            echo "service=sample-service" >> $GITHUB_OUTPUT
          elif [[ "$TRIGGERED" == "CI – Build & Push CatalogService Docker Image" ]]; then
            echo "service=catalog-service" >> $GITHUB_OUTPUT
          elif [[ "$TRIGGERED" == "CI – Build & Push NotificationService Docker Image" ]]; then
            echo "service=notification-service" >> $GITHUB_OUTPUT
          elif [[ "$TRIGGERED" == "CI – Build & Push OrderService Docker Image" ]]; then
            echo "service=order-service" >> $GITHUB_OUTPUT
          elif [[ "$TRIGGERED" == "CI – Build & Push Yarp Api Gateway Docker Image" ]]; then
            echo "service=yarp-api-gateway" >> $GITHUB_OUTPUT
          else
            echo "ERROR: Unrecognized workflow name: $TRIGGERED" >&2
            exit 1
          fi

      - name: SSH to VPS and deploy
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.VPS_SSH_PORT }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          script: |
            cd /root/metro-ticketing-system
            docker compose up -d --pull always --force-recreate --no-deps ${{ steps.choose-service.outputs.service }}